<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <!-- Sandcastle directories -->
    <DxRootPath>$(MSBuildThisFileDirectory)\..\</DxRootPath>
    <ProductionTools>$(DxRootPath)\ProductionTools</ProductionTools>
    <ProductionTransforms>$(DxRootPath)\ProductionTransforms</ProductionTransforms>
    <PresentationStyle Condition=" '$(PresentationStyle)' == '' ">vs2010</PresentationStyle>
    <PresentationStyleDir Condition=" '$(PresentationStyleDir)' == '' ">$(DxRootPath)\Presentation\$(PresentationStyle)</PresentationStyleDir>
  </PropertyGroup>
  <PropertyGroup>
    <OutputDir Condition=" '$(OutputDir)' == '' ">bin\</OutputDir>
    <BuildDir Condition=" '$(BuildDir)' == '' ">$(MSBuildProjectDirectory)\build</BuildDir>
    <DllDir>$(BuildDir)\dll</DllDir>
    <DependencyDir>$(BuildDir)\dependency</DependencyDir>
    <CommentsDir>$(BuildDir)\comments</CommentsDir>
  </PropertyGroup>

  <Target Name="MsHelpViewer" DependsOnTargets="CleanBuildDirectory;BuildDocumentationForReferencedProjects">
    <Message Text="Target: MsHelpViewer" />
  </Target>
  
  <Target Name="BuildDocumentationForReferencedProjects">
    <!-- this task will build and create XML documentation for referenced projects -->
    <Message Text="Copying assemblies from referenced projects to $(DllDir)" />
    
    <MSBuild
        Projects="@(ProjectReference)"
        Targets="Build"
        BuildInParallel="true"
        Properties="DocumentationFile=$(CommentsDir)\%(FileName).xml;RunCodeAnalysis=False;StyleCopEnabled=False"
      >
      <Output TaskParameter="TargetOutputs" ItemName="OutputAssemblies" />
    </MSBuild>
  </Target>
  
  <!--Call MRefBuilder-->
  <!--<Target Name="Reflection" DependsOnTargets="CreateDirectories;CopySrcFiles">
    <Exec Command='"$(ProductionTools)\MRefBuilder" &quot;$(DllDir)\*.dll&quot; &quot;$(DllDir)\*.exe&quot; /out:&quot;$(TopicStyleDir)\reflection.org&quot; /dep:&quot;$(DependencyDir)\*.dll&quot;,&quot;$(DependencyDir)\*.exe&quot;' Condition="$(Internal)=='false'" />

    <Exec Command='"$(ProductionTools)\MRefBuilder" &quot;$(DllDir)\*.dll&quot; &quot;$(DllDir)\*.exe&quot; /out:&quot;$(TopicStyleDir)\reflection.org&quot; /dep:&quot;$(DependencyDir)\*.dll&quot;,&quot;$(DependencyDir)\*.exe&quot; /internal+' Condition="$(Internal)=='true'" />

    <Exec Condition="'$(TopicStyle)' == 'prototype'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyPrototypeDocModel.xsl" /xsl:"$(ProductionTransforms)\AddGuidFilenames.xsl" "$(TopicStyleDir)\reflection.org" /out:"$(TopicStyleDir)\reflection.xml"' />
    <Exec Condition="'$(TopicStyle)' == 'vs2005'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyVSDocModel.xsl" /xsl:"$(ProductionTransforms)\AddFriendlyFilenames.xsl" "$(TopicStyleDir)\reflection.org" /out:"$(TopicStyleDir)\reflection.xml" /arg:IncludeAllMembersTopic=true /arg:IncludeInheritedOverloadTopics=true' />
    <Exec Condition="'$(TopicStyle)' == 'hana'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyVSDocModel.xsl" /xsl:"$(ProductionTransforms)\AddFriendlyFilenames.xsl" "$(TopicStyleDir)\reflection.org" /out:"$(TopicStyleDir)\reflection.xml" /arg:IncludeAllMembersTopic=false /arg:IncludeInheritedOverloadTopics=true' />
  </Target>-->

  <Target Name="CleanBuildDirectory">
    <Message Text="Cleaning build directory '$(BuildDir)'." />
    <RemoveDir Directories="$(BuildDir)" Condition="Exists($(BuildDir))" ContinueOnError="true" />
  </Target>
</Project>